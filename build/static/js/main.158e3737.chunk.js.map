{"version":3,"sources":["cgi_multiButton.js","App.js","reportWebVitals.js","index.js"],"names":["count","parseInt","changeText","event","console","log","target","innerText","CounterButton","props","state","counter","handleClick","bind","this","setState","text","Button","variant","color","onClick","React","Component","MultiButton","num","output","i","push","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAEIA,EAAMC,SAAS,GACbC,EAAW,SAACC,GACdC,QAAQC,IAAIF,EAAMG,QAEhBN,EAAMC,SAASD,GAAO,EACtBG,EAAMG,OAAOC,UAAYN,SAASD,IAU9BQ,E,kDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GAEX,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALH,E,+CAOlB,SAAYV,GACVW,KAAKC,SAAS,CAAEJ,QAASG,KAAKJ,MAAMC,QAAU,IAC9CP,QAAQC,IAAIS,KAAKJ,S,oBAEnB,WACE,IAAIM,EAAOF,KAAKJ,MAAMC,QACtB,OACE,eAACM,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAASN,KAAKF,YAA1D,gCACOI,EADP,gB,GAfsBK,IAAMC,WAqBnBC,EA7BG,SAACC,GAEf,IADA,IAAIC,EAAO,GACHC,EAAE,EAAEA,EAAEF,EAAI,IAAIE,EACtBD,EAAOE,KAAK,eAAC,EAAD,CAAeT,QAAQ,YAAYC,MAAM,UACrDC,QAASlB,EADG,mBACWwB,EADX,yBAGZ,OAAOD,GCHAG,MATb,WACA,OACA,qBAAKC,UAAU,MAAf,SAEEN,EAAY,OCKDO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.158e3737.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport React from 'react';\r\nvar count=parseInt(0);\r\nconst changeText=(event)=>{\r\n    console.log(event.target)\r\n\r\n      count=parseInt(count)+1;\r\n      event.target.innerText = parseInt(count);\r\n    }\r\n    const MultiButton=(num)=>{\r\n        var output=[];\r\n        for(let i=1;i<num+1;++i) {\r\n        output.push(<CounterButton variant=\"contained\" color=\"primary\"\r\n        onClick={changeText}>第{i}個按鍵</CounterButton>)\r\n        }\r\n        return output;\r\n    }\r\n    class CounterButton extends React.Component{\r\n      constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          counter: 0\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n      }\r\n      handleClick(event){\r\n        this.setState({ counter: this.state.counter + 1});\r\n        console.log(this.state);\r\n      }\r\n      render() {\r\n        var text = this.state.counter;\r\n        return(\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleClick}>\r\n            你點了 {text}次\r\n          </Button>\r\n        );\r\n      }\r\n    }\r\n    export default MultiButton;\r\n","//import logo from './logo.svg';\nimport './App.css';\nimport MultiButton from './cgi_multiButton'\n  function App() {\n  return (\n  <div className=\"App\">\n\n  { MultiButton(10) }\n  </div>\n  );\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}